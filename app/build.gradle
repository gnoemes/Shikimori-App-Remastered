import org.moallemi.gradle.internal.VersionCodeType

apply from: '../dependencies.gradle'
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.moallemi.advanced-build-version'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    kapt { generateStubs = true }
    androidExtensions { experimental = true }

    advancedVersioning {
        nameOptions {
            versionMajor 0
            versionMinor 8
            versionPatch 7
            versionBuild 0
        }
        codeOptions {
            versionCodeType VersionCodeType.AUTO_INCREMENT_ONE_STEP
            dependsOnTasks 'release'
        }

        outputOptions {
            renameOutput true
            nameFormat 'ShikimoriApp-v' + versionName + '-${buildType}'
        }
    }

    def appVersionName = advancedVersioning.versionName
    def appVersionCode = advancedVersioning.versionCode

    println "config code: ${appVersionName}, name: ${appVersionCode}"

    defaultConfig {
        applicationId "com.gnoemes.shikimori"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionName appVersionName
        versionCode appVersionCode
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            versionNameSuffix "-SNAPSHOT"
        }
    }

    buildTypes.each {
        it.buildConfigField 'String', 'ShikimoriClientId', ShikimoriClientId
        it.buildConfigField 'String', 'ShikimoriClientSecret', ShikimoriClientSecret
        it.buildConfigField 'String', 'ShikimoriBaseUrl', ShikimoriBaseUrl
        it.buildConfigField 'String', 'VideoBaseUrl', VideoBaseUrl
        it.buildConfigField 'String', 'VkRandomToken', VkRandomToken
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:" + versions.kotlin

    implementation 'androidx.appcompat:appcompat:' + versions.androidx
    implementation 'androidx.preference:preference:' + versions.androidx
    implementation 'androidx.constraintlayout:constraintlayout:' + versions.constraint
    implementation 'androidx.fragment:fragment:' + versions.androidxFragment
    implementation 'androidx.preference:preference:' + versions.androidxPrefs
    implementation 'androidx.core:core-ktx:' + versions.ktx
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:' + versions.androidx
    implementation 'com.google.android.material:material:' + versions.material
    implementation 'androidx.palette:palette:' + versions.androidx

    implementation "com.google.dagger:dagger-android:" + versions.dagger
    implementation "com.google.dagger:dagger-android-support:" + versions.dagger
    kapt "com.google.dagger:dagger-android-processor:" + versions.dagger
    kapt "com.google.dagger:dagger-compiler:" + versions.dagger

    implementation 'io.reactivex.rxjava2:rxandroid:' + versions.rxAndroid
    implementation "io.reactivex.rxjava2:rxjava:" + versions.rxJava

    implementation "com.squareup.retrofit2:retrofit:" + versions.retrofit
    implementation "com.squareup.retrofit2:converter-gson:" + versions.retrofit
    implementation "com.squareup.retrofit2:adapter-rxjava2:" + versions.retrofit
    implementation "com.squareup.okhttp3:okhttp:" + versions.okHttp
    implementation "com.squareup.okhttp3:logging-interceptor:" + versions.okHttp
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:' + versions.urlConnection

    implementation "com.arello-mobile:moxy:" + versions.moxy
    kapt "com.arello-mobile:moxy-compiler:" + versions.moxy

    implementation "com.github.bumptech.glide:glide:" + versions.glide
    implementation "com.github.bumptech.glide:okhttp3-integration:" + versions.glide
    kapt "com.github.bumptech.glide:compiler:" + versions.glide

    implementation "com.google.code.gson:gson:" + versions.gson
    implementation 'net.danlew:android.joda:' + versions.jodaDateTime
    implementation 'ru.terrakok.cicerone:cicerone:' + versions.cicerone
    implementation 'com.afollestad.material-dialogs:core:' + versions.materialDialogs
    implementation 'com.afollestad.material-dialogs:input:' + versions.materialDialogs
    implementation 'com.afollestad.material-dialogs:files:' + versions.materialDialogs
    implementation 'com.afollestad.material-dialogs:datetime:' + versions.materialDialogs
    implementation 'com.github.ybq:Android-SpinKit:' + versions.spinKit
    implementation 'com.github.santalu:respinner:' + versions.reSpinner
    implementation 'com.hannesdorfmann:adapterdelegates4:' + versions.adapterDelegate
    implementation 'com.google.android:flexbox:' + versions.flexbox
    implementation 'com.infideap.drawerbehavior:drawer-behavior:' + versions.drawerBehavior
    implementation 'com.facebook.shimmer:shimmer:' + versions.shimmer
    implementation 'de.hdodenhof:circleimageview:' + versions.circleImageView
    implementation 'ru.superjob:kotlin-permissions:' + versions.kotlinPermissions

    implementation 'com.google.android.exoplayer:exoplayer:' + versions.exoplayer
    implementation 'com.google.android.exoplayer:extension-mediasession:' + versions.exoplayer

    implementation 'org.kefirsf:kefirbb:' + versions.kefirBB

    implementation 'com.google.firebase:firebase-core:' + versions.firebase
    implementation 'com.google.firebase:firebase-messaging:' + versions.firebaseMessaging
    implementation 'com.google.firebase:firebase-firestore:' + versions.firebaseFirestore
    implementation 'com.google.firebase:firebase-storage:' + versions.firebaseStorage

    implementation('com.crashlytics.sdk.android:crashlytics:' + versions.crashlytics) {
        transitive = true
    }

    implementation 'com.github.ome450901:SimpleRatingBar:' + versions.ratingBar
    implementation 'org.jsoup:jsoup:' + versions.jsoup

    implementation 'androidx.multidex:multidex:' + versions.multidex

    implementation project(":storio-common")
    implementation project(":storio-sqlite")
    implementation project(':storio-sqlite-annotations')
    implementation project(':storio-content-resolver')
    kapt project(':storio-common-annotations-processor')
    kapt project(':storio-sqlite-annotations-processor')
    kapt project(':storio-content-resolver-annotations-processor')
}

apply plugin: 'com.google.gms.google-services'
